{"version":3,"sources":["webpack:///./src/components/StateVariables.js","webpack:///./src/components/ButtonContainer.js","webpack:///./src/components/Button.js","webpack:///./src/components/Button.module.css","webpack:///./src/components/StateVariables.module.css","webpack:///./src/components/ButtonContainer.module.css","webpack:///./src/pages/experiments/Rule30Controls.js"],"names":["StateVariables","variables","codeSnippet","key","value","variableArray","Object","entries","push","className","styles","container","codeBox","map","e","i","ButtonContainer","children","buttonContainer","Button","id","onClick","label","flexButton","module","exports","Rule30Controls","speedUp","slowDown","reset","startStop","startStopLabel","isStarted"],"mappings":"8FAAA,8CAkCeA,IA/BQ,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAEfC,EAAc,SAACC,EAAKC,GACtB,OACI,oCAAE,8BAAOD,EAAP,KAAcC,GAER,OAIZC,EAAgB,GAEpB,GAAIJ,EAEA,cAA2BK,OAAOC,QAAQN,GAA1C,eAAsD,CAAjD,WAAOE,EAAP,KAAYC,EAAZ,KACDC,EAAcG,KAAKN,EAAYC,EAAKC,IAI5C,OACI,yBAAKK,UAAWC,IAAOC,WACnB,yBAAKF,UAAWC,IAAOE,SACnB,6BAAK,kDAA8B,KAAM,KACpCP,EAAcQ,KAAI,SAACC,EAAGC,GAAJ,OAAUV,EAAcU,W,oCC1B/D,8CAUeC,IANS,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtB,OAAO,yBAAKR,UAAWC,IAAOQ,iBACzBD,K,oCCNT,8CASeE,IALA,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAC1B,OAAO,4BAAQb,UAAWC,IAAOa,WAAYF,QAASA,EAASD,GAAIA,GAAKE,K,uBCJ5EE,EAAOC,QAAU,CAAC,WAAa,qC,qBCA/BD,EAAOC,QAAU,CAAC,UAAY,0CAA0C,QAAU,0C,qBCAlFD,EAAOC,QAAU,CAAC,gBAAkB,mD,kCCDpC,oEAyBeC,UApBQ,SAAC,GAAiE,IAAhEzB,EAA+D,EAA/DA,UAAW0B,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,UAEpDC,EAF8E,EAAfC,UAElC,OAAS,QAE5C,OACI,6BAAK,kBAAC,IAAD,CAAmB/B,UAAWA,IAC/B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQoB,QAAS,kBAAMS,KAAaV,GAAG,kBAAkBE,MAAOS,IAEhE,kBAAC,IAAD,CAAQV,QAAS,kBAAMM,KAAWP,GAAG,gBAAgBE,MAAM,aAE3D,kBAAC,IAAD,CAAQD,QAAS,kBAAMO,KAAYR,GAAG,iBAAiBE,MAAM,cAE7D,kBAAC,IAAD,CAAQD,QAAS,kBAAMQ,KAAST,GAAG,gBAAgBE,MAAM","file":"component---src-pages-experiments-rule-30-controls-js-088401da11eac2cdfd46.js","sourcesContent":["import React from \"react\";\nimport styles from './StateVariables.module.css';\n\nconst StateVariables = ({variables}) => {\n\n    const codeSnippet = (key, value) => {\n        return (\n            <><code>{key}: {value}</code>\n                {\n                    \"\\n\"\n                }</>)\n    };\n\n    let variableArray = [];\n\n    if (variables) {\n\n        for (const [key, value] of Object.entries(variables)) {\n            variableArray.push(codeSnippet(key, value));\n        }\n    }\n    \n    return (\n        <div className={styles.container}>\n            <div className={styles.codeBox}>\n                <pre><span>State variables:</span>{\"\\n\"}{\"\\n\"}\n                    {variableArray.map((e, i) => variableArray[i]\n                    )\n                    }</pre>\n            </div>\n        </div>\n    )\n}\n\nexport default StateVariables;","import React from \"react\";\n\nimport styles from './ButtonContainer.module.css';\n\nconst ButtonContainer = ({children}) => {\n    return <div className={styles.buttonContainer}>\n        {children}\n    </div>\n}\n\nexport default ButtonContainer;","import React from \"react\";\n\nimport styles from './Button.module.css';\n\nconst Button = ({id, onClick, label}) => {\n    return <button className={styles.flexButton} onClick={onClick} id={id}>{label}\n    </button>\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexButton\":\"Button-module--flexButton--35QpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StateVariables-module--container--2sbRO\",\"codeBox\":\"StateVariables-module--codeBox--2y7Nm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"ButtonContainer-module--buttonContainer--20YhE\"};","import StateVariablesBox from \"../../components/StateVariables\";\nimport ButtonContainer from \"../../components/ButtonContainer\";\nimport Button from \"../../components/Button\";\nimport React from \"react\";\n\nconst Rule30Controls = ({variables, speedUp, slowDown, reset, startStop, isStarted}) => {\n\n    const startStopLabel = isStarted ? 'Stop' : 'Start';\n\n    return (\n        <div><StateVariablesBox variables={variables}/>\n            <ButtonContainer>\n                <Button onClick={() => startStop()} id=\"startStopButton\" label={startStopLabel}>\n                </Button>\n                <Button onClick={() => speedUp()} id=\"speedUpButton\" label=\"Speed Up\">\n                </Button>\n                <Button onClick={() => slowDown()} id=\"slowDownButton\" label=\"Slow Down\">\n                </Button>\n                <Button onClick={() => reset()} id=\"resetUpButton\" label=\"Reset\">\n                </Button>\n            </ButtonContainer>\n        </div>\n    )\n}\n\nexport default Rule30Controls;"],"sourceRoot":""}